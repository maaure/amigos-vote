# Exemplo de configuração de ambiente.
# Copie este arquivo para .env.local e preencha com seus próprios valores.
# NUNCA comite o arquivo .env.local no seu repositório.

# =================================================================
# SELETOR DE BANCO DE DADOS
# =================================================================
# Define qual banco de dados a aplicação irá usar.
# Opções: "supabase" ou "local"
DB_CLIENT="local"

# =================================================================
# CONEXÃO COM SUPABASE
# =================================================================
# Preencha estas variáveis se você for usar DB_CLIENT="supabase".
# Vá em Project Settings -> Database -> Connection string -> URI
DATABASE_URL_SUPABASE="postgresql://postgres:[YOUR-PASSWORD]@db.<project-ref>.supabase.co:5432/postgres"

# =================================================================
# NEXTAUTH_SECRET
# =================================================================
# Chave secreta usada pelo NextAuth para assinar e encriptar tokens/sessions e cookies.
# - Necessária em ambientes de produção para garantir que sessões e JWTs sejam válidos e seguros.
# - Mantenha este valor em segredo e NÃO o comite no repositório.
# - Se o valor for comprometido, gere um novo e faça a rotação das sessões.
# Como gerar um valor seguro (ex.: 32 bytes base64):
#   openssl rand -base64 32
NEXTAUTH_SECRET=<32bytes_base64_key>

# =================================================================
# CONEXÃO COM POSTGRESQL LOCAL (VIA DOCKER COMPOSE)
# =================================================================
# Estas variáveis são usadas pelo docker-compose.yml para criar e
# configurar o container do banco de dados PostgreSQL.
POSTGRES_USER=inimigo-user
POSTGRES_PASSWORD=inimigo-pass
POSTGRES_DB=inimigo-db
# Se estiver usando o ambiente com o docker-compose, use o valor "db" que representa o endereço do serviço do postres no dockercompose.
DB_ADDRESS=db

# =================================================================
# AUTENTICAÇÃO E OUTROS SERVIÇOS
# =================================================================
# Chaves para serviços externos, como OAuth do GitHub, etc.
GITHUB_ID=<seu-github-id>
GITHUB_SECRET=<seu-github-secret>

# Chave secreta para proteger as rotas de CRON
CRON_SECRET_KEY=<sua-cron-key-segura>